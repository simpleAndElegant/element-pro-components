import{o as n,c as s,aq as a}from"./vendor.12461cd3.js";const t={class:"markdown-body"},p=a('<h1>组件设计</h1><h2>布局组件</h2><blockquote><p>包括 <code>ProLayout</code> <code>ProMenu</code> <code>ProBreadcrumb</code> <code>ProTabs</code></p></blockquote><p>布局组件用于页面的快速搭建。参考：</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-layout</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header-left</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-breadcrumb</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header-right</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav-header</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header-bottom</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-tabs</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pro-layout</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ul><li><code>ProLayout</code> 提供一套基础的界面，内部使用了 <code>ProMenu</code></li><li><code>ProBreadcrumb</code> 根据当前的路由信息自动生成（显示 router.meta 中的 title）</li><li><code>ProTabs</code> 根据路由的变化自动生成（显示 router.meta 中的 title）</li></ul><p>相关配置可以查看相关组件文档</p><h2>表单组件</h2><blockquote><p>包括 <code>ProForm</code> <code>ProRadio</code> <code>ProRadioButton</code> <code>ProCheckbox</code> <code>ProCheckboxButton</code> <code>ProSelect</code> <code>ProInputTag</code> <code>ProAutocompleteTag</code></p></blockquote><p>表单组件用于快速构建表单。参考：</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-form</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">&#39;javascript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&#39;Dart&#39;</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">&#39;dart&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n        prop<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;el-input&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span> <span class="token punctuation">{</span>\n          clearable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;prefix-icon&#39;</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-search&#39;</span><span class="token punctuation">,</span>\n          suffixIcon<span class="token operator">:</span> <span class="token string">&#39;el-icon-date&#39;</span><span class="token punctuation">,</span>\n          slots<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function-variable function">prefix</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n              <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">&#39;el-input__icon el-icon-search&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">append</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;搜索&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;radio&#39;</span><span class="token punctuation">,</span>\n        prop<span class="token operator">:</span> <span class="token string">&#39;radio&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;pro-radio&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span> <span class="token punctuation">{</span>\n          data<span class="token operator">:</span> list<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      form<span class="token punctuation">,</span>\n      columns<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3>关于 <code>ProForm</code></h3><ul><li>通过 <code>v-model</code> 绑定的<strong>必须</strong>是一个响应式对象，如：<code>const form = ref({})</code></li><li>通过 <code>columns</code> 传入的数组自动生成表单。当 <code>columns</code> 内部数据（包括引用数据）不会变动时，<code>columns</code> <strong>可以不是</strong>一个响应式对象；当 <code>columns</code> 中的数据变化（包括引用数据）需要响应到表单上时，<strong>必须</strong>是一个响应式对象</li><li><code>columns</code> 中的 <code>prop</code> 为对应生成 form 上的键值，需要是一个<strong>唯一值</strong></li><li><code>columns</code> 中的 <code>component</code> 指向的组件<strong>必须</strong>通过全局注册，否则无法渲染组件。同时需要组件能够通过 <code>v-model</code> 绑定数据，否则需要通过插槽使用组件，如：<code>ElUpload</code>。当然也根据业务逻辑自己封装成通过 <code>v-model</code> 绑定数据的组件，这样就可以直接使用了</li><li><code>columns</code> 中的 <code>props</code> 中数据将直接传递给对应组件。<strong>对于事件需要通过 <code>on[Event]</code> 驼峰这种形式绑定。如：<code>change</code> -&gt; <code>onChange</code>, <code>input</code> -&gt; <code>onInput</code></strong></li><li>通过 <code>columns</code> 中的 <code>props</code> 下面的 <code>slots</code> 可以向对应组件传递简单的<a href="https://v3.cn.vuejs.org/guide/render-function.html">渲染函数</a></li><li>通过 <code>columns</code> 中的 <code>children</code> 可以配置实现子表单，子表单输入的为一个对象数组</li><li>组件不包含按钮的权限控制，需要手动通过传入 <code>menu</code> 配置按钮显示与隐藏</li></ul><h3>关于 <code>ProRadio</code> <code>ProRadioButton</code> <code>ProCheckbox</code> <code>ProCheckboxButton</code> <code>ProSelect</code></h3><p>都是为了更好的在 <code>ProForm</code> 中使用，而进行的简单封装</p><h2>表格组件</h2><blockquote><p>包括 <code>ProTable</code> <code>ProCrud</code> <code>ProColumnSetting</code></p></blockquote><ul><li><code>ProTable</code> 用于快速构建表格</li><li><code>ProCrud</code> 是基于 <code>ProTable</code> 与 <code>ProForm</code> 的一套具有增删改查的表格组件</li></ul><h3>关于 <code>ProTable</code></h3><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;日期&#39;</span><span class="token punctuation">,</span> prop<span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> render<span class="token operator">:</span> <span class="token string">&#39;--&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> prop<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;地址&#39;</span><span class="token punctuation">,</span> prop<span class="token operator">:</span> <span class="token string">&#39;address&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        date<span class="token operator">:</span> <span class="token string">&#39;2016-05-03&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">&#39;No. 189, Grove St, Los Angeles&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">,</span>\n      columns<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ul><li>通过 <code>total</code> 实现分页显示</li><li>通过 <code>v-model:current-page</code> 绑定当前页数</li><li>通过 <code>v-model:page-size</code> 绑定每页显示条目个数</li><li>通过 <code>columns</code> 传入的数组自动生成表格。当 <code>columns</code> 内部数据（包括引用数据）不会变动时，<code>columns</code> <strong>可以不是</strong>一个响应式对象；当 <code>columns</code> 中的数据变化（包括引用数据）需要响应到表单上时，<strong>必须</strong>是一个响应式对象</li><li><code>columns</code> 中的 <code>prop</code> 为对应 data 上的键值，需要是一个<strong>唯一值</strong></li><li>通过 <code>columns</code> 中的 <code>render</code> 可以使用简单的<a href="https://v3.cn.vuejs.org/guide/render-function.html">渲染函数</a></li><li>通过 <code>columns</code> 中的 <code>children</code> 可以配置实现多级表头</li><li><code>columns</code> 内设计为仅包含与业务相关的字段（这样能够更方便与 <code>ProForm</code> 配置融合）。对于与功能相关的 <code>index</code> <code>selection</code> <code>expand</code> <code>menu</code> 需要配置实现</li></ul><h3>关于 <code>ProCrud</code></h3><p><code>ProCrud</code> 是一个基于 <code>ProTable</code> 和 <code>ProForm</code> 融合的组件。提供快速开发显示表格、搜索、新建表单、修改表单、删除功能的页面</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pro-crud</span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name"><span class="token namespace">v-model:</span>search</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serachForm<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:menu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ label: <span class="token punctuation">&#39;</span>操作<span class="token punctuation">&#39;</span> }<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@search</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@delete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deleteRow<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> serachForm <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;日期&#39;</span><span class="token punctuation">,</span>\n        prop<span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;el-input&#39;</span><span class="token punctuation">,</span>\n        add<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        edit<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        search<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n        prop<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;el-input&#39;</span><span class="token punctuation">,</span>\n        add<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        search<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        label<span class="token operator">:</span> <span class="token string">&#39;地址&#39;</span><span class="token punctuation">,</span>\n        prop<span class="token operator">:</span> <span class="token string">&#39;address&#39;</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;el-input&#39;</span><span class="token punctuation">,</span>\n        add<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        edit<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        date<span class="token operator">:</span> <span class="token string">&#39;2016-05-03&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">&#39;No. 189, Grove St, Los Angeles&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">done<span class="token punctuation">,</span> isValid<span class="token punctuation">,</span> invalidFields</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span> isValid<span class="token punctuation">,</span> invalidFields<span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">close<span class="token punctuation">,</span> done<span class="token punctuation">,</span> formType<span class="token punctuation">,</span> isValid<span class="token punctuation">,</span> invalidFields</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">,</span> formType<span class="token punctuation">,</span> isValid<span class="token punctuation">,</span> invalidFields<span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        isValid <span class="token operator">?</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">deleteRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;deleteRow&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      form<span class="token punctuation">,</span>\n      serachForm<span class="token punctuation">,</span>\n      data<span class="token punctuation">,</span>\n      columns<span class="token punctuation">,</span>\n      search<span class="token punctuation">,</span>\n      submit<span class="token punctuation">,</span>\n      deleteRow<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ul><li>支持 <code>ProTable</code> 与 <code>ProForm</code> 的全部属性（由于两者都存在 <code>align</code>，所以 <code>align</code> 属性会被优先用于 <code>ProTable</code> 中）</li><li>通过 <code>columns</code> 传入的数组可以自动生成表格、搜索、表单。内部根据 <code>columns</code> 定义的属性（<code>add</code> - 新增表单、<code>edit</code> - 编辑表单、<code>form</code> - 新增与编辑表单、<code>search</code> - 搜索表单、<code>hide</code> - 表格中隐藏）筛选分发到对应组件生成相关内容</li><li>对于更加复杂的情况可以通过各种单独的属性进行传值（<code>add-columns</code> - 新增表单、<code>edit-columns</code> - 编辑表单、<code>form-columns</code> - 新增与编辑表单、<code>search-columns</code> - 搜索表单、<code>table-columns</code> - 表格）</li><li><code>columns</code> 内部的 <code>rules</code> 会被用到各个表单中。通过上面的方法可以避免这个问题，或者通过 <code>search-rules</code> <code>rules</code> 属性进行指定</li><li>默认情况下不显示 新增 编辑 删除 按钮，在配置 <code>menu</code> 后将显示。如果要进行权限限制可以通过 <code>menu</code> 配置按钮的显示与隐藏</li></ul>',25),o={setup:a=>(a,o)=>(n(),s("div",t,[p]))};export default o;
