import{o as n,c as s,aq as a}from"./vendor.12461cd3.js";const p={class:"markdown-body"},t=a('<h1>路由和菜单</h1><p>默认情况下，布局相关的组件会自动从 <code>vue-router</code> 中获取所需要的路由信息</p><h2>统一格式</h2><p>相比原生 router 类型仅扩展了 <code>meta</code> 属性</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">IRouteMeta</span> <span class="token keyword">extends</span> <span class="token class-name">RouteMeta</span> <span class="token punctuation">{</span>\n  title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 用于显示菜单标题</span>\n  icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 用于显示菜单图标</span>\n  hidden<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">// 用于判断是否在菜单中显示，不影响 router-link 跳转</span>\n  keepAlive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">// 控制 keepAlive</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>参考路由</p><div class="language-ts"><pre><code><span class="token keyword">import</span> BaseLayout <span class="token keyword">from</span> <span class="token string">&#39;../layout/Layout.vue&#39;</span>\n<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> IRouteRecordRaw <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@src/index&#39;</span>\n\n<span class="token keyword">const</span> routes<span class="token operator">:</span> IRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/dev&#39;</span><span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/dev/Layout&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> BaseLayout<span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Development&#39;</span><span class="token punctuation">,</span> icon<span class="token operator">:</span> <span class="token string">&#39;el-icon-edit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/dev/Layout&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Layout.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Layout&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/dev/Table&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Table.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Table&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/dev/Form&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Form.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Form&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/dev/Crud&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Crud.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Crud&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> routes\n</code></pre></div><h2>异步路由</h2><p>组件只能够获取定义在 <code>vue-router</code> 中的原始路由信息，不能够获取动态增加的路由。当使用异步生成的动态路由时，虽然可以通过 <code>routes</code> 向组件中传值，但更推荐通过通过下面方式动态增加。只需要保持 <code>router.options.routes</code> 同最终动态增加的路由相同即可</p><div class="language-js"><pre><code><span class="token keyword">const</span> newRoute <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>\n  path<span class="token operator">:</span> <span class="token string">&#39;/admin&#39;</span><span class="token punctuation">,</span>\n  component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Admin&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  children<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;settings&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> AdminSettings<span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Settings&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\nrouter<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>newRoute<span class="token punctuation">)</span>\nrouter<span class="token punctuation">.</span>options<span class="token punctuation">.</span>routes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newRoute<span class="token punctuation">)</span>\n</code></pre></div><h2>路由权限</h2><p>当前组件是不支持路由权限验证的，你需要手动增加</p><p>比如：通过 <a href="#%E5%BC%82%E6%AD%A5%E8%B7%AF%E7%94%B1">异步路由</a> 的方式，在增加生成或增加路由时去除没有访问权限的路由信息</p><p>或者：在 <code>router.beforeEach</code> 中进行跳转验证</p><p>当然也可以结合两者使用</p>',15),o={setup:a=>(a,o)=>(n(),s("div",p,[t]))};export default o;
